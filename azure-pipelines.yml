trigger:
  branches:
    include:
    - '*'
  paths:
    exclude:
    - .gitignore
    - README.md

variables:
  imageName: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: $(imageName)
    steps:
    - task: NodeTool@0
      displayName: 'Use Node 12.x'
      inputs:
        versionSpec: 12.x
        checkLatest: true
    - task: Npm@1
      displayName: 'npm install'
      inputs:
        workingDir: '$(System.DefaultWorkingDirectory)/_auro-docsite'
        verbose: false
    - task: Npm@1
      displayName: 'npm copy font files'
      inputs:
        command: custom
        workingDir: '$(System.DefaultWorkingDirectory)/_auro-docsite'
        verbose: false
        customCommand: 'run copyfiles'
    - task: Npm@1
      displayName: 'npm buildIcons'
      inputs:
        command: custom
        workingDir: '$(System.DefaultWorkingDirectory)/_auro-docsite'
        verbose: false
        customCommand: 'run buildIcons'
    - task: Npm@1
      displayName: 'npm build'
      inputs:
        command: custom
        workingDir: '$(System.DefaultWorkingDirectory)/_auro-docsite'
        verbose: false
        customCommand: 'run build'
    - publish: '$(System.DefaultWorkingDirectory)/_auro-docsite'
      artifact: site
- stage: DeployToTest
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - job:
    pool:
      vmImage: $(imageName)
    steps:
      - task: AzureRmWebAppDeployment@4
        displayName: 'Azure App Service Deploy: Orion Site'
        inputs:
          azureSubscription: 'aurodesignsystem-test-group-SPN'
          appType: webAppLinux
          WebAppName: 'auro-test-site-w2'
          packageForLinux: '$(Pipeline.Workspace)/site'
          RuntimeStack: 'NODE|12-lts'
          StartupCommand: 'node node_modules/react-scripts/scripts/start.js'