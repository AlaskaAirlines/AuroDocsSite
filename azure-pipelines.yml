trigger:
  branches:
    include:
    - '*'
  paths:
    exclude:
    - .gitignore
    - README.md

variables:
- name: imageName
  value: ubuntu-latest
- group: AuroDesignSiteSecrets

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: $(imageName)
    steps:
    - task: NodeTool@0
      displayName: 'Use Node 20.x'
      inputs:
        versionSpec: 20.x
        checkLatest: true
    - task: Npm@1
      displayName: 'npm install'
      inputs:
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: false
    - task: Npm@1
      displayName: 'npm buildIcons'
      inputs:
        command: custom
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: false
        customCommand: 'run buildIcons'
    - task: Npm@1
      displayName: 'npm build:test'
      inputs:
        command: custom
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: false
        customCommand: 'run build'
      env:
        REACT_APP_GITHUB_API_KEY: $(REACT_APP_GITHUB_API_KEY)
        VITE_GH_TOKEN: $(REACT_APP_GITHUB_API_KEY)
        REACT_APP_ADO_PAT: $(REACT_APP_ADO_PAT)
    - publish: '$(System.DefaultWorkingDirectory)/dist'
      artifact: site

- stage: DeployToTest
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: Deploy
    displayName: Deploy Test Code
    environment: 'aurodesignsystem-test'
    pool:
      vmImage: $(imageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: site
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: Auro Site'
            inputs:
              azureSubscription: 'aurodesignsystem-test-group-SPN'
              appType: webAppLinux
              WebAppName: 'auro-test-site-w2'
              packageForLinux: '$(Pipeline.Workspace)/site'
              RuntimeStack: 'NODE|20-lts'
              StartupCommand: 'pm2 serve /home/site/wwwroot --spa --no-daemon'
# - stage: DeployToQA
#   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy QA Code
#     environment: 'aurodesignsystem-qa'
#     pool:
#       vmImage: $(imageName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - download: current
#             artifact: site
#           - task: AzureRmWebAppDeployment@4
#             displayName: 'Azure App Service Deploy: Auro Site'
#             inputs:
#               azureSubscription: 'aurodesignsystem-qa-group-SPN'
#               appType: webAppLinux
#               WebAppName: 'auro-qa-site-w2'
#               packageForLinux: '$(Pipeline.Workspace)/site'
#               RuntimeStack: 'NODE|12-lts'
#               StartupCommand: 'pm2 serve /home/site/wwwroot --spa --no-daemon'
- stage: DeployToProd
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: Deploy
    displayName: Deploy Code
    environment: 'aurodesignsystem-prod'
    pool:
      vmImage: $(imageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: site
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: Auro Site'
            inputs:
              azureSubscription: 'aurodesignsystem-prod-group-SPN'
              appType: webAppLinux
              WebAppName: 'auro-prod-site-w2'
              packageForLinux: '$(Pipeline.Workspace)/site'
              RuntimeStack: 'NODE|20-lts'
              StartupCommand: 'pm2 serve /home/site/wwwroot --spa --no-daemon'
